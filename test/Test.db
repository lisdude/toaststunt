** LambdaMOO Database, Format Version 17 **
2
3
4
0 values pending finalization
0 clocks
0 queued tasks
0 suspended tasks
0 interrupted tasks
0 active connections with listeners
8
#0
System Object
16
3
1
-1
10
0
4
0
1
1
4
0
3
do_login_command
3
173
-1
handle_uncaught_error
3
172
-1
handle_task_timeout
3
172
-1
6
nothing
system
object
anonymous
server_options
waif
6
1
-1
4
1
1
0
4
1
1
1
4
1
1
5
3
1
1
6
3
1
1
7
3
1
#1
Root Class
144
3
1
-1
10
0
4
0
1
-1
4
7
1
0
1
2
1
3
1
4
1
5
1
6
1
7
0
0
0
#2
The First Room
0
3
1
-1
10
0
4
2
1
3
1
4
1
1
4
0
1
eval
3
88
-2
0
0
#3
Wizard
7
3
1
2
10
0
4
0
1
1
4
0
0
0
0
#4
Programmer
3
4
1
2
10
0
4
0
1
1
4
0
0
0
0
#5
Anonymous Class
256
3
1
-1
10
0
4
0
1
1
4
0
0
0
0
#6
Server Options
0
3
1
-1
10
0
4
0
1
1
4
0
0
2
bg_seconds
fg_seconds
2
0
10
3
5
0
10
3
5
#7
Waif Class
128
3
1
-1
10
0
4
0
1
1
4
0
1
new
3
173
-1
0
0
0
5
#0:0
if ((args && (length(args) == 1)) && (args[1] == "shutdown"))
reset_max_object();
while (max_object() > #7)
((ticks_left() < 2000) || (seconds_left() < 2)) && suspend(0);
`recycle(max_object()) ! ANY';
reset_max_object();
endwhile
boot_player(player);
shutdown();
endif
if ((args && (length(args) > 1)) && (args[1] == "connect"))
if (args[2] == "wizard")
o = create($nothing);
o.owner = o;
set_player_flag(o, 1);
o.programmer = 1;
o.wizard = 1;
move(o, #2);
switch_player(player, o);
return;
elseif (args[2] == "programmer")
o = create($nothing);
o.owner = o;
set_player_flag(o, 1);
o.programmer = 1;
move(o, #2);
switch_player(player, o);
return;
elseif (args[2] == "player")
o = create($nothing);
o.owner = o;
set_player_flag(o, 1);
move(o, #2);
switch_player(player, o);
return;
endif
endif
.
#0:1
callers() && raise(E_PERM, "Server task");
{code, message, value, traceback, formatted} = args;
for line in (formatted)
server_log(line);
endfor
.
#0:2
callers() && raise(E_PERM, "Server task");
{resource, traceback, formatted} = args;
for line in (formatted)
server_log(line);
endfor
.
#2:0
set_task_perms(player);
try
try
notify(player, "-=!-^-!=-");
notify(player, toliteral(eval(argstr)));
except e (ANY)
notify(player, toliteral({2, e}));
endtry
finally
notify(player, "-=!-v-!=-");
endtry
.
#7:0
set_task_perms(caller_perms());
player = caller_perms();
return new_waif();
.
